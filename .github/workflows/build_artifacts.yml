name: Maven / Docker Build

env:
  DATASOURCE_URL: ${{ secrets.DATASOURCE_URL }}
  DATASOURCE_USERNAME: ${{ secrets.DATASOURCE_USERNAME }}
  DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
  OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
  OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
  OAUTH_URL: ${{ secrets.OAUTH_URL }}
  
on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build_artifact:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml -DskipTests

    - uses: actions/upload-artifact@v3
      with:
        name: api-jar
        path: target/*.jar
        retention-days: 2

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  build_and_push_container:
    needs: build_artifact
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v4.1.7
        with:
          name: api-jar

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          docker build --build-arg "JAR_FILE=secret-santa-api*.jar" -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          echo "Built container, now pushing to ECR"
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Log out of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}